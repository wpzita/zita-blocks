{"version":3,"file":"script.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/icon-block/script.js","webpack:///./src/blocks/icon-block/style.scss","webpack:///./src/blocks/pricing-table/script.js","webpack:///./src/blocks/pricing-table/style.scss","webpack:///./src/blocks/progress-bar-pie/script.js","webpack:///./src/blocks/progress-bar-pie/style.scss","webpack:///./src/blocks/progress-bar/script.js","webpack:///./src/blocks/progress-bar/style.scss","webpack:///./src/blocks/service-section/script.js","webpack:///./src/blocks/service-section/style.scss","webpack:///./src/blocks/zita-block-slider/script.js","webpack:///./src/blocks/zita-block-slider/style.scss","webpack:///./src/script.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","import \"./style.scss\";\n// console.log('yes i mfront js');","// extracted by mini-css-extract-plugin","import \"./style.scss\";\n// console.log(\"8085 hello ready to say hi front\");","// extracted by mini-css-extract-plugin","import \"./style.scss\";\nlet stateCheck = setInterval(() => {\n  if (document.readyState === \"complete\") {\n    clearInterval(stateCheck);\n\n    let circle_ = document.querySelectorAll(\".zita-block-pie-circle.front_\");\n    if (circle_.length > 0) {\n      for (let x in circle_) {\n        if (circle_[x].nodeName == \"DIV\") {\n          let circleTxt = circle_[x].querySelectorAll(\"span.percent_\")[0];\n          let circle_ele = circle_[x].querySelectorAll(\"svg\")[0];\n          let circle_ele_apply = circle_[x].querySelectorAll(\n            \".percent-apply\"\n          )[0];\n          let getCircleData = circle_ele.getAttribute(\"data\");\n          getCircleData = JSON.parse(getCircleData);\n          let {\n            radius,\n            text,\n            strokeWidth,\n            strokeBgColor,\n            strokeColor,\n            fillBgColor,\n            lineCap,\n            animationDelay,\n          } = getCircleData;\n          // let dasharray_\n          circle_ele_apply.style.strokeWidth = strokeWidth;\n          circle_ele_apply.style.stroke = strokeColor;\n\n          let startAng = 0;\n          let setIntFn = () => {\n            circleTxt.innerText = startAng + \"%\";\n            circle_ele_apply.style.strokeDasharray = `${\n              startAng * ((Math.PI * (radius * 2)) / 100)\n            } ${Math.PI * (radius * 2)}`;\n            if (startAng >= text) clearInterval(startInt);\n            startAng++;\n\n          };\n          let startInt = setInterval(setIntFn, animationDelay);\n          circle_ele.removeAttribute(\"data\");\n        }\n      }\n    }\n  }\n}, 100);\n","// extracted by mini-css-extract-plugin","import \"./style.scss\";\nlet stateCheck = setInterval(() => {\n  if (document.readyState === \"complete\") {\n    clearInterval(stateCheck);\n\n    let getProgressBar = document.querySelectorAll(\n      \".zita-linear-progress-bar.front_\"\n    );\n    if (getProgressBar.length) {\n      for (let x in getProgressBar) {\n        if (getProgressBar[x].nodeName == \"DIV\") {\n          let getPercent = getProgressBar[x].getAttribute(\"percent\");\n          let getDelay = getProgressBar[x].getAttribute(\"delay\");\n          let iniTialPercent = 0;\n          let putTextPErcent = getProgressBar[x].querySelectorAll(\n            \".percent_\"\n          )[0];\n          let putStylePErcent = getProgressBar[x].querySelectorAll(\n            \".line-inner_\"\n          )[0];\n          let setValue = setInterval(() => {\n            putTextPErcent.innerText = iniTialPercent + \"%\";\n            putStylePErcent.style.width = iniTialPercent + \"%\";\n            if (getPercent <= iniTialPercent) clearInterval(setValue);\n            iniTialPercent++;\n          }, getDelay);\n        }\n      }\n    }\n  }\n}, 100);\n","// extracted by mini-css-extract-plugin","import \"./style.scss\";\n","// extracted by mini-css-extract-plugin","import \"./style.scss\";\nlet stateCheck = setInterval(() => {\n  if (document.readyState === \"complete\") {\n    clearInterval(stateCheck);\n    // common slider initillization\n    // for slide sliding effect\n    let getAllslideSlide = document.querySelectorAll(\n      \".zita-slider-ul-slides.slideEffect\"\n    );\n    for (let sliderSlide in getAllslideSlide) {\n      if (getAllslideSlide[sliderSlide].nodeName == \"UL\") {\n        let slider = getAllslideSlide[sliderSlide];\n\n        let firstElement_ = slider.firstElementChild.cloneNode(true);\n        firstElement_.classList.add(\"first-element\");\n        let lastElement_ = slider.lastElementChild.cloneNode(true);\n        lastElement_.classList.add(\"last-element\");\n        slider.append(firstElement_);\n        slider.prepend(lastElement_);\n        slider.children[1].classList.add(\"selected_\");\n        // return;\n\n        let sliderINIT = slider.getAttribute(\"slidersetting\");\n        sliderINIT = JSON.parse(sliderINIT);\n        let containerClosest = slider.closest(\".zita-block-slide-wrapper\");\n        let getPArentWidthSlide = containerClosest.parentNode.getBoundingClientRect()\n          .width;\n        // overWirting Width and height\n        if (\n          \"width\" in sliderINIT &&\n          sliderINIT.width &&\n          getPArentWidthSlide > sliderINIT.width\n        ) {\n          // overwriting width\n          getPArentWidthSlide = sliderINIT.width;\n          containerClosest.style.width = getPArentWidthSlide + \"px\";\n        }\n        if (\"height\" in sliderINIT && sliderINIT.height) {\n          // overwriting height\n          slider.style.height = sliderINIT.height + \"px\";\n        }\n        // overWirting Width and height\n        let countChildern = slider.children.length;\n        slider.style.width = countChildern * getPArentWidthSlide + \"px\";\n        slider.style.marginLeft = -getPArentWidthSlide + \"px\";\n        containerClosest.style.opacity = 1;\n\n        let tranSitionDuration = 1;\n        let transitionDuClone = tranSitionDuration;\n        let sliderDelay = containerClosest\n          .querySelector(\".zita-slider-container\")\n          .getAttribute(\"sliderDelay\");\n        const prev = containerClosest.querySelector(\n          \".zita-slider-bullet-next-prev.prev\"\n        );\n        const next = containerClosest.querySelector(\n          \".zita-slider-bullet-next-prev.next\"\n        );\n\n        let indicator = containerClosest.querySelector(\n          \".zita-slider-bullet-trigger\"\n        );\n        let indicatorActive, indiCatorStyle;\n        if (indicator) {\n          indicatorActive = indicator.getAttribute(\"active-color\");\n          indiCatorStyle = indicator.getAttribute(\"childStyle\");\n          indicator = indicator.children;\n          if (indicator[0].querySelector(\"span\")) {\n            indicator[0].querySelector(\n              \"span\"\n            ).style.backgroundColor = indicatorActive;\n          }\n        }\n        let slideIndex = 1;\n        if (prev && next) {\n          prev.addEventListener(\"click\", function () {\n            prevSlideSl();\n            resetTimerSl();\n          });\n          next.addEventListener(\"click\", function () {\n            nextSlideSl();\n            resetTimerSl();\n          });\n        }\n        for (let x in indicator) {\n          if (indicator[x].nodeName == \"LI\") {\n            indicator[x].addEventListener(\"click\", function () {\n              slideIndex = parseInt(x) + 1;\n              changesSlideSl();\n              resetTimerSl();\n            });\n          }\n        }\n        function nextSlideSl() {\n          if (slideIndex == countChildern - 2) {\n            // next opt perform\n            slideIndex++;\n            setTimeout(() => {\n              slideIndex = 1;\n              transitionDuClone = 0;\n              changesSlideSl();\n              transitionDuClone = tranSitionDuration;\n            }, transitionDuClone * 1000);\n            // next opt perform\n          } else if (slideIndex < countChildern - 2) {\n            slideIndex++;\n          }\n          changesSlideSl();\n        }\n        function prevSlideSl() {\n          if (slideIndex == 1) {\n            // prev opt perform\n            slideIndex--;\n            setTimeout(() => {\n              slideIndex = countChildern - 2;\n              transitionDuClone = 0;\n              changesSlideSl();\n              transitionDuClone = tranSitionDuration;\n            }, transitionDuClone * 1000);\n            // prev opt perform\n          } else if (slideIndex > 1) {\n            slideIndex--;\n          }\n          changesSlideSl();\n        }\n\n        function changesSlideSl() {\n          let moveSlide =\n            slideIndex > 0 ? -(slideIndex * getPArentWidthSlide) : 0;\n          slider.style.marginLeft = moveSlide + \"px\";\n          slider.style.transitionDuration = transitionDuClone + \"s\";\n          for (let i = 0; i < countChildern; i++) {\n            slider.children[i].classList.remove(\"selected_\");\n            if (indicator && indicator[i]) {\n              indicator[i].classList.remove(\"selected_\");\n              if (indicator[i].querySelector(\"span\")) {\n                indicator[i]\n                  .querySelector(\"span\")\n                  .setAttribute(\"style\", indiCatorStyle);\n              }\n            }\n          }\n          slider.children[slideIndex].classList.add(\"selected_\");\n          if (indicator) {\n            let indicatorIndex =\n              countChildern - 1 == slideIndex\n                ? 0\n                : slideIndex == 0\n                ? indicator.length - 1\n                : slideIndex - 1;\n            indicator[indicatorIndex].classList.add(\"selected_\");\n            if (indicator[indicatorIndex].querySelector(\"span\")) {\n              indicator[indicatorIndex].querySelector(\n                \"span\"\n              ).style.backgroundColor = indicatorActive;\n            }\n          }\n        }\n        sliderDelay = parseInt(sliderDelay);\n        if (sliderDelay > 0) {\n          sliderDelay = sliderDelay * 1000;\n        }\n        function resetTimerSl() {\n          if (sliderDelay > 0) {\n            clearInterval(timer);\n            timer = setInterval(autoPlaySl, sliderDelay);\n          }\n        }\n        function autoPlaySl() {\n          nextSlideSl();\n        }\n        let timer;\n        if (sliderDelay > 0) {\n          timer = setInterval(autoPlaySl, sliderDelay);\n        }\n      }\n    }\n\n    /****************************** */\n    // for slide fade effect\n    let getAllSlide = document.querySelectorAll(\n      \".zita-slider-ul-slides.fadeEffect\"\n    );\n    for (let slider in getAllSlide) {\n      if (getAllSlide[slider].nodeName == \"UL\") {\n        const slides = getAllSlide[slider].children;\n        const containerClosest = getAllSlide[slider].closest(\n          \".zita-slider-container\"\n        );\n        // overwriting width and height\n        let sliderINIT_ = getAllSlide[slider].getAttribute(\"slidersetting\");\n        sliderINIT_ = JSON.parse(sliderINIT_);\n        let containerWrapper = getAllSlide[slider].closest(\n          \".zita-block-slide-wrapper\"\n        );\n        let getPArentWidthSlide_ = containerWrapper.parentNode.getBoundingClientRect()\n          .width;\n        slides[0].classList.add(\"selected_\");\n\n        if (\n          \"width\" in sliderINIT_ &&\n          sliderINIT_.width &&\n          getPArentWidthSlide_ > sliderINIT_.width\n        ) {\n          // overwriting width\n          containerWrapper.style.width = sliderINIT_.width + \"px\";\n        }\n        if (\"height\" in sliderINIT_ && sliderINIT_.height) {\n          // overwriting height\n          getAllSlide[slider].style.height = sliderINIT_.height + \"px\";\n        }\n\n        // overwriting width and height\n\n        let sliderDelay = containerClosest.getAttribute(\"sliderDelay\");\n\n        const prev = containerClosest.querySelector(\n          \".zita-slider-bullet-next-prev.prev\"\n        );\n        const next = containerClosest.querySelector(\n          \".zita-slider-bullet-next-prev.next\"\n        );\n        let indicator = containerClosest.querySelector(\n          \".zita-slider-bullet-trigger\"\n        );\n        let indicatorActive, indiCatorStyle;\n        // console.log(indicator.children);\n        if (indicator) {\n          indicatorActive = indicator.getAttribute(\"active-color\");\n          indiCatorStyle = indicator.getAttribute(\"childStyle\");\n          indicator = indicator.children;\n          if (indicator[0].querySelector(\"span\")) {\n            indicator[0].querySelector(\n              \"span\"\n            ).style.backgroundColor = indicatorActive;\n          }\n        }\n        containerWrapper.style.opacity = 1;\n        let index = 0;\n        if (prev && next) {\n          prev.addEventListener(\"click\", function () {\n            prevSlide();\n            resetTimer();\n          });\n          next.addEventListener(\"click\", function () {\n            nextSlide();\n            resetTimer();\n          });\n        }\n\n        for (let x in indicator) {\n          if (indicator[x].nodeName == \"LI\") {\n            indicator[x].addEventListener(\"click\", function () {\n              index = x;\n              changesSlide();\n              resetTimer();\n            });\n          }\n        }\n        function nextSlide() {\n          if (index == slides.length - 1) {\n            index = 0;\n          } else {\n            index++;\n          }\n          changesSlide();\n        }\n        function prevSlide() {\n          if (index == 0) {\n            index = slides.length - 1;\n          } else {\n            index--;\n          }\n          changesSlide();\n        }\n        function changesSlide() {\n          for (let i = 0; i < slides.length; i++) {\n            slides[i].classList.remove(\"selected_\");\n            if (indicator) {\n              indicator[i].classList.remove(\"selected_\");\n              if (indicator[i].querySelector(\"span\")) {\n                indicator[i]\n                  .querySelector(\"span\")\n                  .setAttribute(\"style\", indiCatorStyle);\n              }\n            }\n          }\n          slides[index].classList.add(\"selected_\");\n          if (indicator) {\n            indicator[index].classList.add(\"selected_\");\n            if (indicator[index].querySelector(\"span\")) {\n              indicator[index].querySelector(\n                \"span\"\n              ).style.backgroundColor = indicatorActive;\n            }\n          }\n        }\n        // console.log(sliderDelay);\n        sliderDelay = parseInt(sliderDelay);\n        if (sliderDelay > 0) {\n          sliderDelay = sliderDelay * 1000;\n        }\n        function resetTimer() {\n          if (sliderDelay > 0) {\n            clearInterval(timer);\n            timer = setInterval(autoPlay, sliderDelay);\n          }\n        }\n        function autoPlay() {\n          nextSlide();\n        }\n        let timer;\n        if (sliderDelay > 0) {\n          timer = setInterval(autoPlay, sliderDelay);\n        }\n      }\n    }\n    // ready state\n  }\n}, 100);\n","// extracted by mini-css-extract-plugin","import \"./blocks/icon-block/script\";\nimport \"./blocks/pricing-table/script\";\nimport \"./blocks/service-section/script\";\nimport \"./blocks/progress-bar/script\";\nimport \"./blocks/progress-bar-pie/script\";\nimport \"./blocks/zita-block-slider/script\";\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAjCA;AAkCA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9CA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9BA;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAIA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AACA;AAyEA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AApKA;AAqKA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAGA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AACA;AAiEA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAlIA;AAmIA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/TA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}